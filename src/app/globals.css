@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));
@custom-variant light (&:where(.light, .light *));

:root, .dark {
  --background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
  --foreground: #ededed;
}

.light {
  --background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  --foreground: #0a0a0a;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: 'ClashDisplay-Regular', Arial, Helvetica, sans-serif;
  transition: background-color 0.3s ease, color 0.3s ease;
}

@font-face {
  font-family: 'ClashDisplay-Light';
  src: url('../fonts/ClashDisplay-Light.woff2') format('woff2'),
        url('../fonts/ClashDisplay-Light.woff') format('woff'),
        url('../fonts/ClashDisplay-Light.ttf') format('truetype');
  font-weight: 300;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: 'ClashDisplay-Regular';
  src: url('../fonts/ClashDisplay-Regular.woff2') format('woff2'),
        url('../fonts/ClashDisplay-Regular.woff') format('woff'),
        url('../fonts/ClashDisplay-Regular.ttf') format('truetype');
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: 'ClashDisplay-Semibold';
  src: url('../fonts/ClashDisplay-Semibold.woff2') format('woff2'),
        url('../fonts/ClashDisplay-Semibold.woff') format('woff'),
        url('../fonts/ClashDisplay-Semibold.ttf') format('truetype');
  font-weight: 600;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: 'Fira Code';
  src: url('../fonts/FiraCode-Regular.ttf') format('truetype');
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}
.hamburger-box {
  width: 40px;
  height: 24px;
  display: inline-block;
  position: relative;
}
.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -2px;
}
.hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
  width: 40px;
  height: 4px;
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}
.hamburger-inner::before, .hamburger-inner::after {
  content: "";
  display: block;
  background-color: inherit;
}
.hamburger-inner::before {
  top: -10px;
}
.hamburger-inner::after {
  bottom: -10px;
}
.hamburger--squeeze .hamburger-inner {
  transition-duration: 0.075s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--squeeze .hamburger-inner::before {
  transition: top 0.075s 0.12s ease, opacity 0.075s ease;
}
.hamburger--squeeze .hamburger-inner::after {
  transition: bottom 0.075s 0.12s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--squeeze.is-active .hamburger-inner {
  transform: rotate(45deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}
.hamburger--squeeze.is-active .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.075s ease, opacity 0.075s 0.12s ease;
}
.hamburger--squeeze.is-active .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
  transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}

/* Original gradient-dance for TextDecoder */
.gradient-dance {
  background: linear-gradient(50deg, #22c55e, #6366f1, #3b82f6, #06b6d4, #a78bfa, #ec4899, #fbbf24, #ef4444, #8b5cf6);
  background-size: 200% 200%;
  background-position: 50% 25%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: circularDance 10s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes circularDance {
  0%, 100% {
      background-position: 50% 25%;
      background-size: 200% 200%;
  }
  10% {
      background-position: 75% 35%;
      background-size: 230% 230%;
  }
  20% {
      background-position: 90% 55%;
      background-size: 250% 250%;
  }
  30% {
      background-position: 85% 75%;
      background-size: 230% 230%;
  }
  40% {
      background-position: 65% 90%;
      background-size: 210% 210%;
  }
  50% {
      background-position: 35% 85%;
      background-size: 240% 240%;
  }
  60% {
      background-position: 15% 65%;
      background-size: 260% 260%;
  }
  70% {
      background-position: 10% 45%;
      background-size: 230% 230%;
  }
  80% {
      background-position: 25% 25%;
      background-size: 210% 210%;
  }
  90% {
      background-position: 40% 15%;
      background-size: 220% 220%;
  }
}

/* Aurora animation for AuroraText component */
@keyframes gradientDance {
  0%, 100% {
      background-position: 50% 25%;
      background-size: 200% 200%;
  }
  10% {
      background-position: 75% 35%;
      background-size: 230% 230%;
  }
  20% {
      background-position: 90% 55%;
      background-size: 250% 250%;
  }
  30% {
      background-position: 85% 75%;
      background-size: 230% 230%;
  }
  40% {
      background-position: 65% 90%;
      background-size: 210% 210%;
  }
  50% {
      background-position: 35% 85%;
      background-size: 240% 240%;
  }
  60% {
      background-position: 15% 65%;
      background-size: 260% 260%;
  }
  70% {
      background-position: 10% 45%;
      background-size: 230% 230%;
  }
  80% {
      background-position: 25% 25%;
      background-size: 210% 210%;
  }
  90% {
      background-position: 40% 15%;
      background-size: 220% 220%;
  }
}

.animate-gradient-dance {
  animation: gradientDance 10s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes marquee {
  from { transform: translateX(0) }
  to { transform: translateX(calc(-100% - var(--gap))) }
}

.animate-marquee {
  animation: marquee var(--duration) linear infinite;
}

/* Motion Toggle Button - Neumorphic Design */
.motion-toggle-button {
  width: 50px;
  height: 50px;
  background-color: #191A1E;
  border-radius: 25px;
  padding: 6px;
  box-shadow: 1.5px 1.5px 3px #0e0e0e, -1.5px -1.5px 3px rgb(95 94 94 / 25%);
  transition: all ease 0.3s;
  position: relative;
}

/* Hide the checkbox input */
.motion-toggle-input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
  display: none;
}

.motion-toggle-surface {
  width: 100%;
  height: 100%;
  border-radius: 19px;
  box-shadow: 1.5px 1.5px 3px #0e0e0e, -1.5px -1.5px 3px rgb(95 94 94 / 25%);
  transition: all ease 0.3s;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #a5a5a5;
}

/* Pressed state (when motion is reduced) */
.motion-toggle-input:checked + .motion-toggle-surface {
  box-shadow: inset 1.5px 1.5px 3px #0e0e0e, inset -1.5px -1.5px 3px #5f5e5e;
  color: rgb(77, 124, 255);
}

/* Glow effect when motion is enabled (not checked) */
.motion-toggle-button:not(:has(.motion-toggle-input:checked)) {
  box-shadow: 
    1.5px 1.5px 3px #0e0e0e, 
    -1.5px -1.5px 3px rgb(95 94 94 / 25%), 
    0 0 20px rgba(34, 197, 94, 0.3),
    0 0 40px rgba(34, 197, 94, 0.1);
}

/* Light mode adjustments */
.light .motion-toggle-button {
  background-color: #f0f0f0;
  box-shadow: 1.5px 1.5px 3px #d0d0d0, -1.5px -1.5px 3px #ffffff;
}

.light .motion-toggle-surface {
  box-shadow: 1.5px 1.5px 3px #d0d0d0, -1.5px -1.5px 3px #ffffff;
  color: #666666;
}

.light .motion-toggle-input:checked + .motion-toggle-surface {
  box-shadow: inset 1.5px 1.5px 3px #d0d0d0, inset -1.5px -1.5px 3px #ffffff;
  color: rgb(77, 124, 255);
}

.light .motion-toggle-button:not(:has(.motion-toggle-input:checked)) {
  box-shadow: 
    1.5px 1.5px 3px #d0d0d0, 
    -1.5px -1.5px 3px #ffffff, 
    0 0 20px rgba(34, 197, 94, 0.3),
    0 0 40px rgba(34, 197, 94, 0.1);
}

/* React Flow Turbo Node Styles */
.react-flow {
  --turbo-bg-color: rgb(17, 17, 17);
  --turbo-text-color: rgb(243, 244, 246);
  --turbo-node-border-radius: 10px;
  --turbo-node-box-shadow: 10px 0 15px rgba(42, 138, 246, 0.3),
    -10px 0 15px rgba(233, 42, 103, 0.3);
  background-color: transparent;
  color: var(--turbo-text-color);
}

.turbo-node {
  border-radius: var(--turbo-node-border-radius);
  display: flex;
  height: 40px;
  min-width: 96px;
  letter-spacing: -0.2px;
  box-shadow: var(--turbo-node-box-shadow);
}

.turbo-wrapper {
  overflow: hidden;
  display: flex;
  padding: 2px;
  position: relative;
  border-radius: var(--turbo-node-border-radius);
  flex-grow: 1;
}

.turbo-wrapper.gradient:before {
  content: '';
  position: absolute;
  padding-bottom: calc(100% * 1.41421356237);
  width: calc(100% * 1.41421356237);
  background: conic-gradient(
    from -160deg at 50% 50%,
    #e92a67 0deg,
    #a853ba 120deg,
    #2a8af6 240deg,
    #e92a67 360deg
  );
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 100%;
}

.turbo-inner {
  background: var(--turbo-bg-color);
  padding: 9px 12px;
  border-radius: var(--turbo-node-border-radius);
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex-grow: 1;
  position: relative;
}

.turbo-icon {
  margin-right: 6px;
  display: flex;
  align-items: center;
}

.turbo-body {
  display: flex;
  align-items: center;
}

.turbo-title {
  font-size: 11px;
  margin-bottom: 1px;
  line-height: 1;
  color: var(--turbo-text-color);
}

.turbo-subtitle {
  font-size: 8px;
  color: #777;
  line-height: 1;
}

.react-flow__handle {
  opacity: 0;
}

.react-flow__handle.source {
  right: -10px;
}

.react-flow__handle.target {
  left: -10px;
}

.react-flow__node:focus {
  outline: none;
}

.react-flow__edge .react-flow__edge-path {
  stroke: url(#edge-gradient);
  stroke-width: 2;
  stroke-opacity: 0.75;
}

/* Higher specificity selectors for conditional edge styling - no !important needed */
.react-flow .react-flow__edge .react-flow__edge-path.edge-default {
  stroke: #6b7280;
  stroke-width: 1;
  stroke-opacity: 0.4;
}

.react-flow .react-flow__edge .react-flow__edge-path.edge-highlighted {
  stroke: url(#edge-gradient);
  stroke-width: 2;
  stroke-opacity: 0.8;
}

/* Light mode adjustments */
.light .react-flow {
  --turbo-bg-color: rgb(248, 250, 252);
  --turbo-text-color: rgb(17, 17, 17);
}

.light .turbo-subtitle {
  color: #666;
}